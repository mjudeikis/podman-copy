metadata:
  creationTimestamp: "2019-09-29T18:25:32Z"
  name: busyecho
  namespace: kube-system
  resourceVersion: "143722"
  selfLink: /api/v1/namespaces/kube-system/pods/busyecho
  uid: 958b5d56-c4a9-4d1a-b98f-a450210fd925
spec:
  containers:
  - command:
    - echo "Hello from container"
    env:
    - name: KUBE_DNS_PORT_53_TCP
      value: tcp://10.96.0.10:53
    - name: KUBE_DNS_PORT_53_TCP_PROTO
      value: tcp
    - name: KUBE_DNS_SERVICE_PORT_DNS
      value: "53"
    - name: KUBERNETES_PORT_443_TCP_PORT
      value: "443"
    - name: KUBE_DNS_PORT_53_TCP_ADDR
      value: 10.96.0.10
    - name: KUBE_DNS_PORT_9153_TCP_PROTO
      value: tcp
    - name: KUBERNETES_PORT_443_TCP
      value: tcp://10.96.0.1:443
    - name: KUBE_DNS_SERVICE_PORT_METRICS
      value: "9153"
    - name: KUBE_DNS_PORT_53_UDP_PROTO
      value: udp
    - name: KUBERNETES_PORT_443_TCP_PROTO
      value: tcp
    - name: KUBERNETES_SERVICE_PORT
      value: "443"
    - name: KUBE_DNS_PORT_53_UDP_PORT
      value: "53"
    - name: KUBE_DNS_PORT_9153_TCP_PORT
      value: "9153"
    - name: KUBE_DNS_PORT_9153_TCP_ADDR
      value: 10.96.0.10
    - name: KUBE_DNS_PORT_53_UDP_ADDR
      value: 10.96.0.10
    - name: KUBE_DNS_PORT_53_TCP_PORT
      value: "53"
    - name: KUBERNETES_SERVICE_HOST
      value: 10.96.0.1
    - name: KUBE_DNS_SERVICE_PORT_DNS_TCP
      value: "53"
    - name: KUBE_DNS_SERVICE_PORT
      value: "53"
    - name: KUBE_DNS_PORT
      value: udp://10.96.0.10:53
    - name: KUBERNETES_SERVICE_PORT_HTTPS
      value: "443"
    - name: KUBERNETES_PORT
      value: tcp://10.96.0.1:443
    - name: KUBE_DNS_SERVICE_HOST
      value: 10.96.0.10
    - name: KUBE_DNS_PORT_9153_TCP
      value: tcp://10.96.0.10:9153
    - name: KUBERNETES_PORT_443_TCP_ADDR
      value: 10.96.0.1
    - name: KUBE_DNS_PORT_53_UDP
      value: udp://10.96.0.10:53
    image: busybox
    imagePullPolicy: Always
    name: nginx
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    resources:
      requests:
        cpu: "1"
        memory: 1G
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: default-token-492tn
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: podman
  nodeSelector:
    beta.kubernetes.io/os: linux
    kubernetes.io/hostname: podman
    kubernetes.io/role: agent
    type: virtual-kubelet
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - key: virtual-kubelet.io/provider
    operator: Exists
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: default-token-492tn
    secret:
      defaultMode: 420
      secretName: default-token-492tn
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2019-09-29T18:25:32Z"
    status: "True"
    type: PodScheduled
  message: io.podman.ErrorOccurred
  phase: Pending
  qosClass: Burstable
  reason: ProviderFailed
